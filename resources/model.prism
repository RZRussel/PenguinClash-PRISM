mdp

formula max_x = 74;
formula max_y = 42;
formula init_x1 = 30;
formula init_y1 = 21;
formula init_direction1 = 0;
formula init_x2 = 37;
formula init_y2 = 21;
formula init_direction2 = 180;
formula island_collision = (x1 = 9 & y1 >= 20 & y1 <= 21
 | x1 = 9 & y1 = 54
 | x1 = 10 & y1 >= 16 & y1 <= 21
 | x1 = 10 & y1 >= 54 & y1 <= 58
 | x1 = 11 & y1 >= 14 & y1 <= 20
 | x1 = 11 & y1 >= 54 & y1 <= 60
 | x1 = 12 & y1 >= 13 & y1 <= 16
 | x1 = 12 & y1 >= 58 & y1 <= 61
 | x1 = 13 & y1 >= 11 & y1 <= 14
 | x1 = 13 & y1 >= 60 & y1 <= 63
 | x1 = 14 & y1 >= 10 & y1 <= 13
 | x1 = 14 & y1 >= 61 & y1 <= 64
 | x1 = 15 & y1 >= 9 & y1 <= 11
 | x1 = 15 & y1 >= 63 & y1 <= 65
 | x1 = 16 & y1 >= 9 & y1 <= 10
 | x1 = 16 & y1 >= 64 & y1 <= 65
 | x1 = 17 & y1 >= 8 & y1 <= 10
 | x1 = 17 & y1 >= 64 & y1 <= 66
 | x1 = 18 & y1 >= 7 & y1 <= 9
 | x1 = 18 & y1 >= 65 & y1 <= 67
 | x1 = 19 & y1 >= 7 & y1 <= 8
 | x1 = 19 & y1 >= 66 & y1 <= 67
 | x1 = 20 & y1 >= 6 & y1 <= 8
 | x1 = 20 & y1 >= 66 & y1 <= 68
 | x1 = 21 & y1 >= 6 & y1 <= 7
 | x1 = 21 & y1 >= 67 & y1 <= 68
 | x1 = 22 & y1 >= 5 & y1 <= 7
 | x1 = 22 & y1 >= 67 & y1 <= 69
 | x1 = 23 & y1 >= 5 & y1 <= 6
 | x1 = 23 & y1 >= 68 & y1 <= 69
 | x1 = 24 & y1 >= 4 & y1 <= 6
 | x1 = 24 & y1 >= 68 & y1 <= 70
 | x1 = 25 & y1 >= 4 & y1 <= 5
 | x1 = 25 & y1 >= 69 & y1 <= 70
 | x1 = 26 & y1 >= 4 & y1 <= 5
 | x1 = 26 & y1 >= 69 & y1 <= 70
 | x1 = 27 & y1 >= 4 & y1 <= 5
 | x1 = 27 & y1 >= 69 & y1 <= 70
 | x1 = 28 & y1 >= 3 & y1 <= 5
 | x1 = 28 & y1 >= 69 & y1 <= 71
 | x1 = 29 & y1 >= 3 & y1 <= 4
 | x1 = 29 & y1 >= 70 & y1 <= 71
 | x1 = 30 & y1 >= 3 & y1 <= 4
 | x1 = 30 & y1 >= 70 & y1 <= 71
 | x1 = 31 & y1 >= 3 & y1 <= 4
 | x1 = 31 & y1 >= 70 & y1 <= 71
 | x1 = 32 & y1 >= 3 & y1 <= 4
 | x1 = 32 & y1 >= 70 & y1 <= 71
 | x1 = 33 & y1 >= 3 & y1 <= 4
 | x1 = 33 & y1 >= 70 & y1 <= 71
 | x1 = 34 & y1 >= 3 & y1 <= 4
 | x1 = 34 & y1 >= 70 & y1 <= 71
 | x1 = 35 & y1 >= 3 & y1 <= 4
 | x1 = 35 & y1 >= 70 & y1 <= 71
 | x1 = 36 & y1 >= 2 & y1 <= 4
 | x1 = 36 & y1 >= 70 & y1 <= 72
 | x1 = 37 & y1 >= 2 & y1 <= 3
 | x1 = 37 & y1 >= 71 & y1 <= 72
 | x1 = 38 & y1 >= 2 & y1 <= 4
 | x1 = 38 & y1 >= 38 & y1 <= 40
 | x1 = 39 & y1 >= 3 & y1 <= 4
 | x1 = 39 & y1 >= 38 & y1 <= 39
 | x1 = 40 & y1 >= 3 & y1 <= 4
 | x1 = 40 & y1 >= 38 & y1 <= 39
 | x1 = 41 & y1 >= 3 & y1 <= 4
 | x1 = 41 & y1 >= 38 & y1 <= 39
 | x1 = 42 & y1 >= 3 & y1 <= 4
 | x1 = 42 & y1 >= 38 & y1 <= 39
 | x1 = 43 & y1 >= 3 & y1 <= 4
 | x1 = 43 & y1 >= 38 & y1 <= 39
 | x1 = 44 & y1 >= 3 & y1 <= 4
 | x1 = 44 & y1 >= 38 & y1 <= 39
 | x1 = 45 & y1 >= 3 & y1 <= 4
 | x1 = 45 & y1 >= 38 & y1 <= 39
 | x1 = 46 & y1 >= 3 & y1 <= 5
 | x1 = 46 & y1 >= 37 & y1 <= 39
 | x1 = 47 & y1 >= 4 & y1 <= 5
 | x1 = 47 & y1 >= 37 & y1 <= 38
 | x1 = 48 & y1 >= 4 & y1 <= 5
 | x1 = 48 & y1 >= 37 & y1 <= 38
 | x1 = 49 & y1 >= 4 & y1 <= 5
 | x1 = 49 & y1 >= 37 & y1 <= 38
 | x1 = 50 & y1 >= 4 & y1 <= 6
 | x1 = 50 & y1 >= 36 & y1 <= 38
 | x1 = 51 & y1 >= 5 & y1 <= 6
 | x1 = 51 & y1 >= 36 & y1 <= 37
 | x1 = 52 & y1 >= 5 & y1 <= 7
 | x1 = 52 & y1 >= 35 & y1 <= 37
 | x1 = 53 & y1 >= 6 & y1 <= 7
 | x1 = 53 & y1 >= 35 & y1 <= 36
 | x1 = 54 & y1 >= 6 & y1 <= 8
 | x1 = 54 & y1 >= 34 & y1 <= 36
 | x1 = 55 & y1 >= 7 & y1 <= 8
 | x1 = 55 & y1 >= 34 & y1 <= 35
 | x1 = 56 & y1 >= 7 & y1 <= 9
 | x1 = 56 & y1 >= 33 & y1 <= 35
 | x1 = 57 & y1 >= 8 & y1 <= 10
 | x1 = 57 & y1 >= 32 & y1 <= 34
 | x1 = 58 & y1 >= 9 & y1 <= 10
 | x1 = 58 & y1 >= 32 & y1 <= 33
 | x1 = 59 & y1 >= 9 & y1 <= 11
 | x1 = 59 & y1 >= 31 & y1 <= 33
 | x1 = 60 & y1 >= 10 & y1 <= 13
 | x1 = 60 & y1 >= 29 & y1 <= 32
 | x1 = 61 & y1 >= 11 & y1 <= 14
 | x1 = 61 & y1 >= 28 & y1 <= 31
 | x1 = 62 & y1 >= 13 & y1 <= 16
 | x1 = 62 & y1 >= 26 & y1 <= 29
 | x1 = 63 & y1 >= 14 & y1 <= 20
 | x1 = 63 & y1 >= 22 & y1 <= 28
 | x1 = 64 & y1 >= 16 & y1 <= 26
 | x1 = 65 & y1 >= 20 & y1 <= 22);

module Schedule
  lock : bool;

  [step] !lock -> (lock' = true);
  [step] lock -> (lock' = false);

endmodule

module IslandCollider1
  i_col1 : bool;

  [step] lock & (!i_col1 & island_collision) -> (i_col1' = true);
  [step] lock & (i_col1 | !island_collision) -> true;
  [step] !lock -> true;

endmodule

module IslandCollider2=IslandCollider1 [i_col1=i_col2, x1=x2, y1=y2, direction1=direction2]
endmodule

module Penguin1
  x1 : [0..max_x];
  y1 : [0..max_y];
  direction1 : [0..359];
  dead1 : bool;

  [step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 0);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 1);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 2);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 3);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 4);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 5);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 6);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 7);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 8);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 9);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 10);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 11);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 12);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 13);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 14);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 15);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 16);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 17);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 18);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 19);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 20);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 21);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 22);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 23);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 24);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 25);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 26);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 27);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 28);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 29);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 30);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 31);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 32);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 33);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 34);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 35);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 36);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 37);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 38);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 39);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 40);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 41);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 42);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 43);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 44);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 45);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 46);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 47);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 48);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 49);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 50);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 51);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 52);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 53);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 54);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 55);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 56);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 57);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 58);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 59);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 1) & (direction1' = 60);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 61);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 62);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 63);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 64);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 65);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 66);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 67);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 68);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 69);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 70);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 71);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 72);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 73);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 74);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 75);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 76);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 77);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 78);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 79);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 80);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 81);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 82);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 83);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 84);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 85);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 86);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 87);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 88);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 89);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 90);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 91);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 92);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 93);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 94);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 95);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 96);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 97);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 98);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 99);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 100);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 101);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 102);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 103);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 104);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 105);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 106);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 107);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 108);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 109);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 110);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 111);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 112);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 113);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 114);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 115);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 116);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 117);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 118);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 119);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 + 1 <= 42) -> (x1' = x1 + 0) & (y1' = y1 + 1) & (direction1' = 120);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 121);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 122);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 123);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 124);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 125);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 126);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 127);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 128);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 129);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 130);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 131);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 132);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 133);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 134);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 135);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 136);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 137);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 138);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 139);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 140);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 141);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 142);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 143);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 144);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 145);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 146);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 147);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 148);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 1 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 1) & (direction1' = 149);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 150);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 151);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 152);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 153);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 154);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 155);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 156);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 157);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 158);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 159);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 160);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 161);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 162);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 163);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 164);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 165);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 166);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 167);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 168);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 169);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 170);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 171);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 172);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 173);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 174);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 175);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 176);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 177);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 178);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 179);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 180);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 181);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 182);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 183);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 184);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 185);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 186);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 187);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 188);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 189);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 190);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 191);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 192);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 193);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 194);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 195);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 196);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 197);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 198);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 199);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 200);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 201);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 202);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 203);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 204);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 205);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 206);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 207);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 208);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 + 0 <= 42) -> (x1' = x1 - 1) & (y1' = y1 + 0) & (direction1' = 209);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 210);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 211);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 212);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 213);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 214);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 215);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 216);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 217);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 218);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 219);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 220);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 221);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 222);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 223);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 224);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 225);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 226);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 227);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 228);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 229);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 230);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 231);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 232);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 233);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 234);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 235);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 236);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 237);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 238);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 239);
[step] !lock & !dead1 & (x1 - 1 >= 0) & (y1 - 1 >= 0) -> (x1' = x1 - 1) & (y1' = y1 - 1) & (direction1' = 240);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 241);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 242);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 243);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 244);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 245);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 246);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 247);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 248);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 249);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 250);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 251);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 252);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 253);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 254);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 255);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 256);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 257);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 258);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 259);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 260);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 261);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 262);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 263);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 264);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 265);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 266);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 267);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 268);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 269);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 270);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 271);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 272);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 273);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 274);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 275);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 276);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 277);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 278);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 279);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 280);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 281);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 282);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 283);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 284);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 285);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 286);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 287);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 288);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 289);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 290);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 291);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 292);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 293);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 294);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 295);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 296);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 297);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 298);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 299);
[step] !lock & !dead1 & (x1 + 0 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 0) & (y1' = y1 - 1) & (direction1' = 300);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 301);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 302);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 303);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 304);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 305);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 306);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 307);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 308);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 309);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 310);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 311);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 312);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 313);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 314);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 315);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 316);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 317);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 318);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 319);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 320);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 321);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 322);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 323);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 324);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 325);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 326);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 327);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 328);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 329);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 - 1 >= 0) -> (x1' = x1 + 1) & (y1' = y1 - 1) & (direction1' = 330);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 331);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 332);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 333);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 334);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 335);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 336);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 337);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 338);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 339);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 340);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 341);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 342);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 343);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 344);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 345);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 346);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 347);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 348);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 349);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 350);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 351);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 352);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 353);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 354);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 355);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 356);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 357);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 358);
[step] !lock & !dead1 & (x1 + 1 <= 74) & (y1 + 0 <= 42) -> (x1' = x1 + 1) & (y1' = y1 + 0) & (direction1' = 359);
  [step] !lock & i_col1 -> (dead1' = true);
  [step] !lock & dead1 -> true;
  [step] lock -> true;

endmodule

module Penguin2=Penguin1 [x1=x2, y1=y2, direction1=direction2, dead1=dead2, i_col1=i_col2]
endmodule

init
  x1 = init_x1 & y1 = init_y1 & direction1 = init_direction1 & dead1 = false & i_col1 = false & x2 = init_x2 & y2 = init_y2 & direction2 = init_direction2 & dead2 = false & i_col2 = false & lock = false
endinit